import React, { useEffect, useState } from "react";
import { Loader, Card, Form, ShowingResults } from "../componenets";
import { mediumGray, darkGray } from "../constents/colors";

function Home() {
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState(null);
  const [searchText, setSearchText] = useState("");

  const handleSearchText = (e) => {
    setSearchText(e.target.value);
  };

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      try {
        const response = await fetch("http://localhost:8080/api/v1/post", {
          method: "get",
          headers: {
            "Content-Type": "application/json",
          },
        });
        const data = await response.json();
        setAllPosts(data.posts);
        setLoading(false);
      } catch (e) {
        console.log(e.message);
      }
    };
    fetchPosts();
  }, []);

  const RenderCards = ({ data, title }) => {
    if (data?.length > 0) {
      return data.map((post) => <Card key={post._id} {...post} />);
    }
    return (
      <h2
        style={{
          color: mediumGray,
        }}
        className="mt-5 font-bold uppercase text-md"
      >
        {title}
      </h2>
    );
  };

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1
          style={{ color: mediumGray }}
          className="font-extrabold text-[32px]"
        >
          The Community Showcase
        </h1>
        <p
          className="mt-2"
          style={{
            color: darkGray,
          }}
        >
          Browser through a collectoin of imaginary and visually stunning images
          generated by EngiSkills AI
        </p>
      </div>

      <div className="mt-16">
        <Form
          LabelName="Search"
          value={searchText}
          name="search"
          placeholder="Search for images..."
          handleChange={handleSearchText}
        />
      </div>

      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-centor">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && <ShowingResults searchText={searchText} />}

            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchText ? (
                <RenderCards data={[]} title="No search results fond" />
              ) : (
                <RenderCards data={allPosts} title="No posts found" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
}

export default Home;
